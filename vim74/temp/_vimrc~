set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

" Sets how many lines of history VIM has to remember
set history=700

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Use spaces instead of tabs
set expandtab

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Be smart when using tabs ;)
set smarttab

" 1 tab == 4 spaces
set shiftwidth=2
set tabstop=2

" Linebreak on 500 characters
set lbr
set tw=500

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines

" Enable filetype plugins
filetype plugin on
filetype indent on

" Set to auto read when a file is changed from the outside
set autoread

" With a map leader it's possible to do extra key combinations 
" like <leader>w saves the current file
let mapleader = "'"
let g:mapleader = "'"

"Save the current file 
nmap <leader>w :w!<cr>

" Fast saving
execute pathogen#infect()
syntax on
filetype plugin indent on


"colorscheme desert
:colo candyMan

" Set extra options when running in GUI mode
if has("gui_running")
    set guioptions-=T
    set guioptions+=e
    set t_Co=256
    set guitablabel=%M\ %t
	set guifont=Sauce_code_Powerline:h11:cANSI
endif

"Open new tab, and got to ex in the current working directory
map <leader>o :tabnew %:h <cr>

"Edit Vim settings in a new tab
map <leader>ev :tabnew $MYVIMRC <cr>

"paste from windows clipboard
map <leader>v "+p<cr>

"Explorer in current directory
map <Leader>e :e <C-R>=expand("%:p:h") . "/" <CR>

"move to the tab to the left
nnoremap <S-h> gT

"move to the tab to the right
nnoremap <S-l> gt


"remap jj to esc for faster go to normal mode 
inoremap jj <Esc>
imap <C-cr> <CR><Esc>O

"set relative number
set relativenumber
set number

" Map <Space> to / (search) and Ctrl-<Space> to ? (backwards search)
map <space> /
map <c-space> ?

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases 
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

"Turn on autocorrect
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

"super tab
let g:SuperTabDefaultCompletionType = "<C-X><C-O>"
let g:SuperTabDefaultCompletionType = "context"

"airline config
let g:airline_powerline_fonts = 1
let g:airline_detect_paste=1


"vim-javascript
"let javascript_enable_domhtmlcss=1 

"Nerdtree startup
autocmd vimenter * NERDTree
autocmd BufEnter * if &modifiable | NERDTreeFind | wincmd p | endif

"cold folding settings
let javaScript_fold=1
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use
au FileType javascript call JavaScriptFold()

"syntax highlighting 
let g:used_javascript_libs = 'underscore,jquery,angularjs,requirejs'

"emmit
let g:user_emmet_mode='a'

"read json files as javascript file to get syntax highlighting
autocmd BufNewFile,BufRead *.json set ft=javascript


"set backup and swap file in temp folder
silent execute '!mkdir "'.$VIMRUNTIME.'/temp"'
silent execute '!del "'.$VIMRUNTIME.'/temp/*~"'
set backupdir=$VIMRUNTIME/temp//
set dir=$VIMRUNTIME/temp//.
